class Node:    def __init__(self, data):        self.data = data        self.next = Noneclass LinkedList:    def __init__(self):        self.head = None    # datani oxirgisiga qo'shadi    def append(self, data):        new_node = Node(data)        if self.head is None:            self.head = new_node            return        last_node = self.head        while last_node.next:            last_node = last_node.next        last_node.next = new_node    def get_all(self):        ls = []        cur_node = self.head        while cur_node.next:            ls.append(cur_node.data)            cur_node = cur_node.next        ls.append(cur_node.data)        print(ls)    def insert_after(self, data , node):        new_node = Node(data)        cur_node = self.head        while cur_node.data != node:            cur_node = cur_node.next        new_node.next = cur_node.next        cur_node.next = new_node    def remove(self, data):        cur_node = self.head        if data == self.head.data:            self.head = self.head.next            return        prev = None        while cur_node.data != data:            prev = cur_node            cur_node = cur_node.next        prev.next = cur_node.next        cur_node = Nonellist = LinkedList()llist.append(1)llist.append(2)llist.append(3)llist.append(4)llist.append(5)# llist.insert_after(6, 2)llist.remove(1)llist.get_all()a = int(2, base=10)