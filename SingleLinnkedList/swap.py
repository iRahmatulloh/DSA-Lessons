class Node:    def __init__(self, data):        self.data = data        self.next = Noneclass LinkedList:    def __init__(self):        self.head = None    def append(self, data):        if self.head is None:            self.head = Node(data)            return        last = self.head        while last.next:            last = last.next        last.next = Node(data)    def get_all(self):        ls = []        cur_node = self.head        while cur_node.next:            ls.append(cur_node.data)            cur_node = cur_node.next        ls.append(cur_node.data)        return ls    def is_empty(self):        if self.head is None:            return True        return False    def get_head(self):        return self.head    def reverse(self):        cur_node = self.head        prev_node = None        while cur_node:            nxt = cur_node.next            cur_node.next = prev_node            prev_node = cur_node            cur_node = nxt        self.head = prev_node    def swap(self, node_1, node_2):        cur = self.head        prev = None        cur_2 = self.head        prev_2 = None        while cur.data != node_1:            prev = cur            cur = cur.next        while cur_2.data != node_2:            prev_2 = cur_2            cur_2 = cur_2.next        prev.next, prev_2.next = cur_2, cur        cur.next, cur_2.next = cur_2.next, cur.next        return self.get_all()llist = LinkedList()llist.append(1)llist.append(2)llist.append(3)llist.append(4)llist.append(5)print(llist.get_all())print(llist.swap(2,4))# print(llist.get_all())masalaN-th last Node - oxiridan N-inchi node2 ta yechim:    1. uzunlikni hisoblash (len) va countdown- uzunlikdan berilgan qiymatni ayirish    2. 2 talik pointer bilan hisoblash